{"version":3,"sources":["module/pick-up-stix/main.ts"],"names":[],"mappings":"AAAA,OAAO,EAA4C,iBAAiB,EAAE,QAAQ,EAAE,oBAAiB;AACjG,OAAO,4BAA4B,6CAA0C;AAC7E,OAAO,qBAAqB,qCAAkC;AAE9D,MAAM,CAAC,MAAM,UAAU,GAAa,EAAE,CAAC;AAEvC;;;GAGG;AACH,MAAM,CAAC,KAAK,UAAU,cAAc,CAAC,QAA4F;IAChI,OAAO,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAC;IACjE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAEtB,iIAAiI;IACjI,MAAM,aAAa,GAAW,QAAQ,CAAC,OAAO,CAAC;IAE/C,IAAI,IAAY,CAAC;IACjB,IAAI,MAAc,CAAC;IACnB,IAAI,QAAa,CAAC;IAElB,mHAAmH;IACnH,4FAA4F;IAC5F,IAAI,aAAa,EAAE;QAClB,OAAO,CAAC,GAAG,CAAC,0CAA0C,aAAa,gBAAgB,CAAC,CAAC;QACrF,QAAQ,GAAG;YACV,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,EAAE;SAChG,CAAC;QAEF,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACxE;SACI;QACJ,OAAO,CAAC,GAAG,CAAC,yEAAyE,CAAC,CAAC;QACvF,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QACrB,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAC;QACrB,MAAM,IAAI,GAAS,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC3F,IAAI,CAAC,IAAI,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,yCAAyC,QAAQ,CAAC,EAAE,yCAAyC,CAAC,CAAC;YAC3G,OAAO;SACP;QACD,QAAQ,GAAG;YACV,GAAG,IAAI,CAAC,IAAI;SACZ,CAAA;KACD;IAED,IAAI,WAAkB,CAAC;IACvB,IAAI,CAAkB,CAAC;IACvB,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;QACnC,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,EAAE;YAC5H,WAAW,GAAG,CAAC,CAAC;YAChB,MAAM;SACN;KACD;IAED,gFAAgF;IAChF,IAAI,WAAW,EAAE;QAChB,OAAO,CAAC,GAAG,CAAC,mEAAmE,WAAW,CAAC,EAAE,GAAG,CAAC,CAAC;QAElG,MAAM,gBAAgB,GAAoB,WAAW,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;QAE9F,IAAI,gBAAgB,EAAE,QAAQ,KAAK,QAAQ,CAAC,SAAS,EAAE;YACtD,0EAA0E;YAC1E,OAAO,CAAC,GAAG,CAAC,6DAA6D,CAAC,CAAC;YAC3E,MAAM,gBAAgB,GAAG,gBAAgB,CAAC,QAAQ,CAAC;YACnD,MAAM,YAAY,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC;YACvE,IAAI,YAAY,EAAE;gBACjB,YAAY,CAAC,KAAK,EAAE,CAAC;aACrB;iBACI;gBACJ,gBAAgB,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE,GAAG,QAAQ,EAAE,EAAC,CAAC,CAAC;aAChF;YAED,MAAM,WAAW,CAAC,OAAO,CAAC,cAAc,EAAE,uBAAuB,EAAE,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC;YAC1F,OAAO;SACP;aACI,IAAI,WAAW,CAAC,KAAK,EAAE;YAC3B,6EAA6E;YAC7E,MAAM,iBAAiB,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;oBAC3C,GAAG,QAAQ;oBACX,KAAK,EAAE;wBACN,cAAc,EAAE;4BACf,cAAc,EAAE;gCACf,YAAY,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE,GAAG,QAAQ,EAAE,EAAE;gCACvE,iBAAiB,EAAE,QAAQ,CAAC,GAAG;gCAC/B,QAAQ,EAAE,QAAQ,CAAC,IAAI;gCACvB,QAAQ,EAAE,KAAK;6BACf;yBACD;qBACD;iBACD,CAAC,CAAC,CAAC;YACJ,OAAO;SACP;KACD;IAED,kFAAkF;IAClF,MAAM,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC;IACtC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACnB,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAEnB,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3E,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAEf,IAAI,OAAO,CAAC;IACZ,IAAI;QACH,OAAO,GAAG,MAAM,eAAe,CAAC;YAC/B,GAAG,EAAE,QAAQ,CAAC,GAAG;YACjB,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,CAAC,EAAE,QAAQ,CAAC,CAAC;YACb,CAAC,EAAE,QAAQ,CAAC,CAAC;YACb,WAAW,EAAE,CAAC;YACd,KAAK,EAAE;gBACN,cAAc,EAAE;oBACf,cAAc,EAAE;wBACf,YAAY,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE,GAAG,QAAQ,EAAE,EAAE;wBACvE,iBAAiB,EAAE,QAAQ,CAAC,GAAG;wBAC/B,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;wBAC9C,QAAQ,EAAE,KAAK;qBACf;iBACD;aACD;SACD,CAAC,CAAC;KACH;IACD,OAAO,CAAC,EAAE;QACT,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;KACjD;IAED,sCAAsC;IACtC,IAAI,OAAO,IAAI,CAAC,aAAa,EAAE;QAC9B,+BAA+B;QAC/B,MAAM,KAAK,GAAU,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC;QAC1E,sCAAsC;QACtC,IAAI,4BAA4B,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrD,qBAAqB;QACrB,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACzB;AACF,CAAC;AAED,MAAM,UAAU,iBAAiB;IAChC,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;IAEhD,MAAM,WAAW,GAAG;QACnB,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI;QACrB,UAAU,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;QAChC,UAAU,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;QAChC,SAAS,EAAE,IAAI,CAAC,QAAQ;KACxB,CAAC;IAEF,mDAAmD;IACnD,MAAM,SAAS,GAAG;QACjB,SAAS,EAAE,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC;QAC5C,UAAU,EAAE,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC;QAC5C,UAAU,EAAE,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;QACvC,aAAa,EAAE,IAAI,CAAC,gBAAgB;QACpC,YAAY,EAAE,IAAI,CAAC,eAAe;QAClC,YAAY,EAAE,IAAI,CAAC,eAAe;QAClC,cAAc,EAAE,IAAI,CAAC,iBAAiB;KACtC,CAAC;IAEF,iBAAiB;IACjB,MAAM,OAAO,GAAG;QACf,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI;KAC/C,CAAC;IAEF,iCAAiC;IACjC,IAAI,CAAC,uBAAuB,GAAG,IAAI,uBAAuB,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC5H,CAAC;AAED,SAAS,qBAAqB,CAAC,CAAC;IAC/B,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;IACpD,YAAY,CAAC,YAAY,CAAC,CAAC;IAC3B,MAAM,YAAY,GAAU,IAAI,CAAC;IACjC,MAAM,CAAC,GAAG,IAAI,qBAAqB,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAChE,CAAC;AAED,KAAK,UAAU,gBAAgB,CAAC,CAAC;IAChC,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;IAE/C,MAAM,YAAY,GAAU,IAAI,CAAC;IACjC,MAAM,KAAK,GAAoB,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;IACpF,MAAM,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,uBAAuB,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACtF,CAAC;AAED,IAAI,YAAY,CAAC;AACjB,KAAK,UAAU,sBAAsB,CAAC,CAAC;IACtC,OAAO,CAAC,GAAG,CAAC,2CAA2C,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAElE,MAAM,YAAY,GAAU,IAAI,CAAC;IAEjC,gDAAgD;IAChD,IAAI,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE;QAChC,OAAO,CAAC,GAAG,CAAC,8EAA8E,CAAC,CAAC;QAC3F,YAAoB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACtC,OAAO;KACP;IAED,6CAA6C;IAC7C,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;QAC5B,OAAO,CAAC,GAAG,CAAC,qEAAqE,CAAC,CAAC;QACnF,OAAO;KACP;IAED,wCAAwC;IACvC,MAAM,gBAAgB,GAAY,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;IAE5D,mBAAmB;IACnB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;QACnB,OAAO,CAAC,GAAG,CAAC,oDAAoD,CAAC,CAAC;QAElE,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;YAC7B,OAAO,CAAC,GAAG,CAAC,mFAAmF,CAAC,CAAC;YAChG,YAAoB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACtC,OAAO;SACP;QAED,6DAA6D;QAC7D,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,KAAK,CAAC,CAAC,EAAE;YACpD,OAAO,CAAC,GAAG,CAAC,wFAAwF,CAAC,CAAC;YACrG,YAAoB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACtC,OAAO;SACP;KACD;IAED,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;QAChC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAC;QACpF,OAAO;KACP;IAED,wCAAwC;IACxC,MAAM,eAAe,GAAU,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAEnD,0EAA0E;IAC1E,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;IAChG,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/D,IAAI,IAAI,GAAG,OAAO,EAAE;QACnB,OAAO,CAAC,GAAG,CAAC,8DAA8D,CAAC,CAAC;QAC5E,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;QACrE,OAAO;KACP;IAED,qCAAqC;IACrC,MAAM,KAAK,GAAoB,SAAS,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,CAAC;IAE/F,yCAAyC;IACzC,IAAI,KAAK,CAAC,QAAQ,EAAE;QACnB,OAAO,CAAC,GAAG,CAAC,wDAAwD,CAAC,CAAC;QACtE,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACzC,KAAK,CAAC,IAAI,EAAE,CAAC;QACb,OAAO;KACP;IAED,YAAY,GAAG,UAAU,CAAC,KAAK,IAAI,EAAE;QACpC,IAAG,KAAK,CAAC,QAAQ,KAAK,QAAQ,CAAC,SAAS,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,6DAA6D,CAAC,CAAC;YAE3E,+EAA+E;YAC/E,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE;gBAC9C,OAAO,CAAC,GAAG,CAAC,+EAA+E,CAAC,CAAC;gBAC7F,OAAO;aACP;YAED,KAAK,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;YAE7B,+DAA+D;YAC/D,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC3B,UAAU,CAAC,GAAG,EAAE;oBACf,WAAW,CAAC,YAAY,EAAE;wBACzB,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC,KAAK,CAAC,wBAAwB,CAAC,IAAI,KAAK,CAAC,iBAAiB;wBAC9G,KAAK,EAAE;4BACN,cAAc,EAAE;gCACf,cAAc,EAAE;oCACf,GAAG,KAAK;iCACR;6BACD;yBACD;qBACD,CAAC,CAAC;oBACH,OAAO,EAAE,CAAC;gBACX,CAAC,EAAE,GAAG,CAAC,CAAC;YACT,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBAClB,OAAO;aACP;YAED,uGAAuG;YACvG,qFAAqF;YACrF,IAAI,YAAY,CAAC,KAAK,EAAE;gBACvB,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,EAAE;oBAC7D,YAAoB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;iBACvC;aACD;iBACI;gBACJ,MAAM,CAAC,GAAG,IAAI,qBAAqB,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC/D;YAED,OAAO;SACP;QAED,OAAO,CAAC,GAAG,CAAC,mEAAmE,CAAC,CAAC;QAEjF,wFAAwF;QACxF,MAAM,WAAW,CAAC,YAAY,CAAC,CAAC;QAChC,MAAM,iBAAiB,CAAC,eAAe,CAAC,KAAK,EAAE;YAC9C,GAAG,KAAK,CAAC,YAAY,CAAC,QAAQ;YAC9B,KAAK,EAAE;gBACN,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK;aAC1B;SACD,CAAC,CAAC;QAEH,WAAW,CAAC,MAAM,CAAC;YAClB,OAAO,EAAE;mBACO,KAAK,CAAC,YAAY,CAAC,KAAK,IAAI,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI;gBAC/D,KAAK,CAAC,iBAAiB;IACnC;YACD,OAAO,EAAE;gBACR,KAAK,EAAE,eAAe,CAAC,KAAK,CAAC,IAAI;gBACjC,KAAK,EAAG,IAAI,CAAC,MAAc,CAAC,MAAM,CAAC,EAAE;gBACrC,KAAK,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE;gBAC/B,KAAK,EAAE,eAAe,CAAC,EAAE;aACzB;SACD,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC,CAAC;IAER,qGAAqG;IACrG,2DAA2D;IAC3D,4CAA4C;IAC5C,8BAA8B;IAC9B,yBAAyB;IACzB,wEAAwE;IACxE,+DAA+D;IAC/D,uCAAuC;IACvC,2BAA2B;IAC3B,uIAAuI;IACvI,6HAA6H;IAC7H,MAAM;IACN,2BAA2B;IAC3B,uBAAuB;IAEvB,wBAAwB;IACxB,qDAAqD;IACrD,yBAAyB;IACzB,cAAc;IACd,gBAAgB;IAChB,yCAAyC;IACzC,6CAA6C;IAC7C,uCAAuC;IACvC,gCAAgC;IAChC,OAAO;IACP,QAAQ;IACR,oGAAoG;IACpG,KAAK;IAEL,6BAA6B;IAE7B,mHAAmH;IACnH,kHAAkH;IAClH,qFAAqF;IACrF,6CAA6C;IAC7C,qBAAqB;IACrB,sEAAsE;IACtE,UAAU;IACV,2BAA2B;IAC3B,6BAA6B;IAC7B,YAAY;IACZ,QAAQ;IAER,8CAA8C;IAC9C,mCAAmC;IACnC,sBAAsB;IACtB,+CAA+C;IAC/C,kBAAkB;IAClB,uBAAuB;IACvB,SAAS;IACT,MAAM;IAEN,iCAAiC;IAEjC,8BAA8B;IAC9B,0BAA0B;IAC1B,iBAAiB;IACjB,gEAAgE;IAChE,+DAA+D;IAC/D,SAAS;IACT,iBAAiB;IACjB,0CAA0C;IAC1C,8CAA8C;IAC9C,wCAAwC;IACxC,iCAAiC;IACjC,QAAQ;IACR,SAAS;IACT,MAAM;IACN,KAAK;IAEL,6EAA6E;IAC7E,4BAA4B;IAC5B,0BAA0B;IAC1B,0EAA0E;IAC1E,6GAA6G;IAC7G,KAAK;IAEL,kEAAkE;IAClE,IAAI;IAEJ,IAAI,CAAC,uBAAuB,EAAE,qBAAqB,EAAE,CAAC;AACvD,CAAC;AAED,KAAK,UAAU,WAAW,CAAC,KAAY;IACtC,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;IACrD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAEnB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;QACnB,MAAM,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;QAC3D,OAAO;KACP;IAED,MAAM,GAAG,GAA4B;QACpC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;QACpB,IAAI,EAAE,iBAAiB,CAAC,WAAW;QACnC,IAAI,EAAE,KAAK,CAAC,EAAE;KACd,CAAA;IACD,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;AACzC,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,WAAW,CAAC,KAAY,EAAE,OAAO;IACtD,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;IACrD,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;IAE9B,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;QACnB,MAAM,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC5B,OAAO;KACP;IAED,MAAM,GAAG,GAA4B;QACpC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;QACpB,IAAI,EAAE,iBAAiB,CAAC,WAAW;QACnC,IAAI,EAAE;YACL,OAAO,EAAE,KAAK,CAAC,EAAE;YACjB,OAAO;SACP;KACD,CAAC;IAEF,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE,GAAG,EAAE;QAC5C,OAAO,CAAC,GAAG,CAAC,qDAAqD,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC;AACJ,CAAC;AAED,KAAK,UAAU,WAAW,CAAC,KAAK,EAAE,OAAO;IACxC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;QACnB,MAAM,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC5B,OAAO;KACP;IAED,MAAM,GAAG,GAA4B;QACpC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;QACpB,IAAI,EAAE,iBAAiB,CAAC,WAAW;QACnC,IAAI,EAAE;YACL,OAAO,EAAE,KAAK,CAAC,EAAE;YACjB,OAAO;SACP;KACD,CAAC;IAEF,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;AACzC,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,iBAAiB,CAAC,KAAY,EAAE,KAAY;IACjE,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;QACnB,MAAM,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACnC,OAAO;KACP;IAED,MAAM,GAAG,GAA4B;QACpC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;QACpB,IAAI,EAAE,iBAAiB,CAAC,iBAAiB;QACzC,IAAI,EAAE;YACL,OAAO,EAAE,KAAK,CAAC,EAAE;YACjB,KAAK;SACL;KACD,CAAC;IAEF,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE,GAAG,EAAE;QAC5C,OAAO,CAAC,GAAG,CAAC,2DAA2D,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;AACJ,CAAC;AAED,KAAK,UAAU,eAAe,CAAC,IAAS;IACvC,OAAO,CAAC,GAAG,CAAC,oDAAoD,CAAC,CAAC;IAClE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAClB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;QACnB,OAAO,CAAC,GAAG,CAAC,qEAAqE,CAAC,CAAC;QACnF,MAAM,CAAC,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC;YAC5B,GAAG,IAAI;SACP,CAAC,CAAC;QACH,OAAO,CAAC,CAAC,EAAE,CAAC;KACZ;IAED,OAAO,CAAC,GAAG,CAAC,8EAA8E,CAAC,CAAC;IAC5F,MAAM,GAAG,GAA4B;QACpC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;QACpB,IAAI,EAAE,iBAAiB,CAAC,eAAe;QACvC,IAAI;KACJ,CAAA;IAED,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACtC,MAAM,OAAO,GAAG,UAAU,CAAC,GAAG,EAAE;YAC/B,MAAM,CAAC,qBAAqB,CAAC,CAAC;QAC/B,CAAC,EAAE,IAAI,CAAC,CAAC;QAET,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE,GAAG,EAAE;YAC5C,OAAO,CAAC,GAAG,CAAC,yDAAyD,CAAC,CAAC;YAEvE,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;gBACzC,8FAA8F;gBAC9F,gGAAgG;gBAChG,6FAA6F;gBAC7F,uFAAuF;gBACvF,OAAO,CAAC,GAAG,CAAC,8DAA8D,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;gBAC9F,YAAY,CAAC,OAAO,CAAC,CAAC;gBACtB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,YAAY,CAAC,CAAkB;IACpD,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;IAC/D,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEf,MAAM,GAAG,GAAG,MAAM,WAAW,CAAC,uBAAuB,CAAC,CAAC;IACvD,MAAM,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IAC9B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAChB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,EAAE,CAAC,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;AACrF,CAAC","file":"../../../src/module/pick-up-stix/main.js","sourcesContent":["import { PickUpStixFlags, PickUpStixSocketMessage, SocketMessageType, ItemType } from \"./models\";\r\nimport ItemTypeSelectionApplication from \"./item-type-selection-application\";\r\nimport ItemConfigApplication from \"./item-config-application\";\r\n\r\nexport const lootTokens: string[] = [];\r\n\r\n/**\r\n * Handles data dropped onto the canvas.\r\n * @param dropData\r\n */\r\nexport async function handleDropItem(dropData: { actorId?: string, pack?: string, id?: string, data?: any, x: number, y: number }) {\r\n\tconsole.log(`pick-up-stix | handleDropItem | called with args:`);\r\n\tconsole.log(dropData);\r\n\r\n\t// if the item came from an actor's inventory, then it'll have an actorId property, we'll need to remove the item from that actor\r\n\tconst sourceActorId: string = dropData.actorId;\r\n\r\n\tlet pack: string;\r\n\tlet itemId: string;\r\n\tlet itemData: any;\r\n\r\n\t// if the item comes from an actor's inventory, then the data structure is a tad different, the item data is stored\r\n\t// in a data property on the dropData parameter rather than on the top-level of the dropData\r\n\tif (sourceActorId) {\r\n\t\tconsole.log(`pick-up-stix | handleDropItem | actor '${sourceActorId}' dropped item`);\r\n\t\titemData = {\r\n\t\t\t...dropData.data.flags?.['pick-up-stix']?.['pick-up-stix']?.['initialState']?.['itemData'] ?? {}\r\n\t\t};\r\n\r\n\t\tawait game.actors.get(sourceActorId).deleteOwnedItem(dropData.data._id);\r\n\t}\r\n\telse {\r\n\t\tconsole.log(`pick-up-stix | handleDropItem | item comes from directory or compendium`);\r\n\t\tpack = dropData.pack;\r\n\t\titemId = dropData.id;\r\n\t\tconst item: Item = await game.packs.get(pack)?.getEntity(itemId) ?? game.items.get(itemId);\r\n\t\tif (!item) {\r\n\t\t\tconsole.log(`pick-up-stix | handleDropItem | item '${dropData.id}' not found in game items or compendium`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\titemData = {\r\n\t\t\t...item.data\r\n\t\t}\r\n\t}\r\n\r\n\tlet targetToken: Token;\r\n\tlet p: PlaceableObject;\r\n\tfor (p of canvas.tokens.placeables) {\r\n\t\tif (dropData.x < p.x + p.width && dropData.x > p.x && dropData.y < p.y + p.height && dropData.y > p.y && p instanceof Token) {\r\n\t\t\ttargetToken = p;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// if the drop was ont another token, check what type of token it was dropped on\r\n\tif (targetToken) {\r\n\t\tconsole.log(`pick-up-stix | handleDropItem | item dropped onto target token '${targetToken.id}'`);\r\n\r\n\t\tconst targetTokenFlags: PickUpStixFlags = targetToken.getFlag('pick-up-stix', 'pick-up-stix');\r\n\r\n\t\tif (targetTokenFlags?.itemType === ItemType.CONTAINER) {\r\n\t\t\t// if the target is a container, then add the item to the container's data\r\n\t\t\tconsole.log(`pick-up-stix | handleDropItem | target token is a container`);\r\n\t\t\tconst existingItemData = targetTokenFlags.itemData;\r\n\t\t\tconst existingItem = existingItemData.find(i => i.id === itemData._id);\r\n\t\t\tif (existingItem) {\r\n\t\t\t\texistingItem.count++;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\texistingItemData.push({ id: itemData._id, count: 1, itemData: { ...itemData }});\r\n\t\t\t}\r\n\r\n\t\t\tawait targetToken.setFlag('pick-up-stix', 'pick-up-stix.itemData', [...existingItemData]);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (targetToken.actor) {\r\n\t\t\t// if the token it was dropped on was an actor, add the item to the new actor\r\n\t\t\tawait createOwnedEntity(targetToken.actor, [{\r\n\t\t\t\t...itemData,\r\n\t\t\t\tflags: {\r\n\t\t\t\t\t'pick-up-stix': {\r\n\t\t\t\t\t\t'pick-up-stix': {\r\n\t\t\t\t\t\t\tinitialState: { id: itemData._id, count: 1, itemData: { ...itemData } },\r\n\t\t\t\t\t\t\timageOriginalPath: itemData.img,\r\n\t\t\t\t\t\t\titemType: ItemType.ITEM,\r\n\t\t\t\t\t\t\tisLocked: false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}]);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t// if it's not a container, then we can assume it's an item. Create the item token\r\n\tconst hg = canvas.dimensions.size / 2;\r\n\tdropData.x -= (hg);\r\n\tdropData.y -= (hg);\r\n\r\n\tconst { x, y } = canvas.grid.getSnappedPosition(dropData.x, dropData.y, 1);\r\n\tdropData.x = x;\r\n\tdropData.y = y;\r\n\r\n\tlet tokenId;\r\n\ttry {\r\n\t\ttokenId = await createItemToken({\r\n\t\t\timg: itemData.img,\r\n\t\t\tname: itemData.name,\r\n\t\t\tx: dropData.x,\r\n\t\t\ty: dropData.y,\r\n\t\t\tdisposition: 0,\r\n\t\t\tflags: {\r\n\t\t\t\t'pick-up-stix': {\r\n\t\t\t\t\t'pick-up-stix': {\r\n\t\t\t\t\t\tinitialState: { id: itemData._id, count: 1, itemData: { ...itemData } },\r\n\t\t\t\t\t\timageOriginalPath: itemData.img,\r\n\t\t\t\t\t\titemType: sourceActorId ? ItemType.ITEM : null,\r\n\t\t\t\t\t\tisLocked: false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tcatch (e) {\r\n\t\tui.notifications.error('Could not create token');\r\n\t}\r\n\r\n\t// if a Token was successfully created\r\n\tif (tokenId && !sourceActorId) {\r\n\t\t// get a reference to the Token\r\n\t\tconst token: Token = canvas.tokens.placeables.find(p => p.id === tokenId);\r\n\t\t// render the item type selection form\r\n\t\tnew ItemTypeSelectionApplication(token).render(true);\r\n\t\t// store the Token ID\r\n\t\tlootTokens.push(tokenId);\r\n\t}\r\n}\r\n\r\nexport function setupMouseManager(): void {\r\n\tconsole.log(`pick-up-stix | setupMouseManager`);\r\n\r\n\tconst permissions = {\r\n\t\tclickLeft: () => true,\r\n\t\tclickLeft2: () => game.user.isGM,\r\n\t\tclickRight: () => game.user.isGM,\r\n\t\tdragStart: this._canDrag\r\n\t};\r\n\r\n\t// Define callback functions for each workflow step\r\n\tconst callbacks = {\r\n\t\tclickLeft: handleTokenItemClicked.bind(this),\r\n\t\tclickLeft2: handleTokenItemConfig.bind(this),\r\n\t\tclickRight: toggleItemLocked.bind(this),\r\n\t\tdragLeftStart: this._onDragLeftStart,\r\n\t\tdragLeftMove: this._onDragLeftMove,\r\n\t\tdragLeftDrop: this._onDragLeftDrop,\r\n\t\tdragLeftCancel: this._onDragLeftCancel\r\n\t};\r\n\r\n\t// Define options\r\n\tconst options = {\r\n\t\ttarget: this.controlIcon ? \"controlIcon\" : null\r\n\t};\r\n\r\n\t// Create the interaction manager\r\n\tthis.mouseInteractionManager = new MouseInteractionManager(this, canvas.stage, permissions, callbacks, options).activate();\r\n}\r\n\r\nfunction handleTokenItemConfig(e) {\r\n\tconsole.log(`pick-up-stix | handleTokenItemConfig`);\r\n\tclearTimeout(clickTimeout);\r\n\tconst clickedToken: Token = this;\r\n\tconst f = new ItemConfigApplication(clickedToken).render(true);\r\n}\r\n\r\nasync function toggleItemLocked(e): Promise<any> {\r\n\tconsole.log(`pick-up-stix | toggleItemLocked`);\r\n\r\n\tconst clickedToken: Token = this;\r\n\tconst flags: PickUpStixFlags = clickedToken.getFlag('pick-up-stix', 'pick-up-stix');\r\n\tawait clickedToken.setFlag('pick-up-stix', 'pick-up-stix.isLocked', !flags.isLocked);\r\n}\r\n\r\nlet clickTimeout;\r\nasync function handleTokenItemClicked(e): Promise<void> {\r\n\tconsole.log(`pick-up-stix | handleTokenItemClicked | ${this.id}`);\r\n\r\n\tconst clickedToken: Token = this;\r\n\r\n\t// if the token is hidden just do a normal click\r\n\tif (e.currentTarget.data.hidden) {\r\n\t\tconsole.log(`pick-up-stix | handleTokenItemClicked | token is hidden, handle normal click`);\r\n\t\t(clickedToken as any)._onClickLeft(e);\r\n\t\treturn;\r\n\t}\r\n\r\n\t// if the item isn't visible can't pick it up\r\n\tif (!clickedToken.isVisible) {\r\n\t\tconsole.log(`pick-up-stix | handleTokenItemClicked | item is not visible to user`);\r\n\t\treturn;\r\n\t}\r\n\r\n\t// get the tokens that the user controls\r\n  const controlledTokens: Token[] = canvas.tokens.controlled;\r\n\r\n\t// gm special stuff\r\n\tif (game.user.isGM) {\r\n\t\tconsole.log(`pick-up-stix | handleTokenItemClicked | user is GM`);\r\n\r\n\t\tif (!controlledTokens.length) {\r\n\t\t\tconsole.log(`pick-up-stix | handleTokenItemClicked | no controlled tokens, handle normal click`);\r\n\t\t\t(clickedToken as any)._onClickLeft(e);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// if only controlling the item itself, handle a normal click\r\n\t\tif (controlledTokens.every(t => clickedToken === t)) {\r\n\t\t\tconsole.log(`pick-up-stix | handleTokenItemClicked | only controlling the item, handle normal click`);\r\n\t\t\t(clickedToken as any)._onClickLeft(e);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tif (controlledTokens.length > 1) {\r\n\t\tui.notifications.error('You must be controlling only one token to pick up an item');\r\n\t\treturn;\r\n\t}\r\n\r\n\t// get the token the user is controlling\r\n\tconst controlledToken: Token = controlledTokens[0];\r\n\r\n\t// get the distance to the token and if it's too far then can't pick it up\r\n\tconst dist = Math.hypot(controlledToken.x - clickedToken.x, controlledToken.y - clickedToken.y);\r\n\tconst maxDist = Math.hypot(canvas.grid.size, canvas.grid.size);\r\n\tif (dist > maxDist) {\r\n\t\tconsole.log(`pick-up-stix | handleTokenItemClicked | item is out of reach`);\r\n\t\tui.notifications.error('You are too far away to interact with that');\r\n\t\treturn;\r\n\t}\r\n\r\n\t// get the flags on the clicked token\r\n\tconst flags: PickUpStixFlags = duplicate(clickedToken.getFlag('pick-up-stix', 'pick-up-stix'));\r\n\r\n\t// if it's locked then it can't be opened\r\n\tif (flags.isLocked) {\r\n\t\tconsole.log(`pick-up-stix | handleTokenItemClicked | item is locked`);\r\n\t\tvar audio = new Audio('sounds/lock.wav');\r\n\t\taudio.play();\r\n\t\treturn;\r\n\t}\r\n\r\n\tclickTimeout = setTimeout(async () => {\r\n\t\tif(flags.itemType === ItemType.CONTAINER) {\r\n\t\t\tconsole.log(`pick-up-stix | handleTokenItemClicked | item is a container`);\r\n\r\n\t\t\t// if it's a container and it's open and can't be closed then don't do anything\r\n\t\t\tif (flags.isOpen && !(flags.canClose ?? true)) {\r\n\t\t\t\tconsole.log(`pick-up-stix | handleTokenItemClicked | container is open and can't be closed`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tflags.isOpen = !flags.isOpen;\r\n\r\n\t\t\t// if there are any container updates then update the container\r\n\t\t\tawait new Promise(resolve => {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tupdateToken(clickedToken, {\r\n\t\t\t\t\t\timg: (flags.isOpen ? flags.imageContainerOpenPath : flags.imageContainerClosedPath) ?? flags.imageOriginalPath,\r\n\t\t\t\t\t\tflags: {\r\n\t\t\t\t\t\t\t'pick-up-stix': {\r\n\t\t\t\t\t\t\t\t'pick-up-stix': {\r\n\t\t\t\t\t\t\t\t\t...flags\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}, 200);\r\n\t\t\t});\r\n\r\n\t\t\tif (!flags.isOpen) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// if the token clicked is an actor and the lootsheetnpc5e module is installed and it's now in the open\r\n\t\t\t// state, perform a double-left click which will open the loot sheet from that module\r\n\t\t\tif (clickedToken.actor) {\r\n\t\t\t\tif (game.modules.get('lootsheetnpc5e').active && flags.isOpen) {\r\n\t\t\t\t\t(clickedToken as any)._onClickLeft2(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst f = new ItemConfigApplication(clickedToken).render(true);\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log(`pick-up-stix | handleTokenItemClicked | token is an ItemType.ITEM`);\r\n\r\n\t\t// if it's just a single item, delete the map token and create an new item on the player\r\n\t\tawait deleteToken(clickedToken);\r\n\t\tawait createOwnedEntity(controlledToken.actor, {\r\n\t\t\t...flags.initialState.itemData,\r\n\t\t\tflags: {\r\n\t\t\t\t...clickedToken.data.flags\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tChatMessage.create({\r\n\t\t\tcontent: `\r\n\t\t\t\t<p>Picked up ${flags.initialState.count} ${flags.initialState.itemData.name}</p>\r\n\t\t\t\t<img src=\"${flags.imageOriginalPath}\" style=\"width: 40px;\" />\r\n\t\t\t`,\r\n\t\t\tspeaker: {\r\n\t\t\t\talias: controlledToken.actor.name,\r\n\t\t\t\tscene: (game.scenes as any).active.id,\r\n\t\t\t\tactor: controlledToken.actor.id,\r\n\t\t\t\ttoken: controlledToken.id\r\n\t\t\t}\r\n\t\t});\r\n\t}, 250);\r\n\r\n\t// if it's not a container or if it is and it's open it's now open (from switching above) then update\r\n\t// the actor's currencies if there are any in the container\r\n\t// if (!flags.isContainer || flags.isOpen) {\r\n\t// \tlet currencyFound = false;\r\n\t// \tlet chatContent = '';\r\n\t// \tconst userCurrencies = controlledToken?.actor?.data?.data?.currency;\r\n\t// \tObject.keys(flags?.currency || {})?.reduce((acc, next) => {\r\n\t// \t\tif (flags?.currency?.[next] > 0) {\r\n\t// \t\t\tcurrencyFound = true;\r\n\t// \t\t\tchatContent += `<span class=\"pick-up-stix-chat-currency ${next}\"></span><span>(${next}) ${flags?.currency?.[next]}</span><br />`;\r\n\t// \t\t\tuserCurrencies[next] = userCurrencies[next] ? +userCurrencies[next] + +flags.currency?.[next] : flags.currency?.[next];\r\n\t// \t\t}\r\n\t// \t\treturn userCurrencies;\r\n\t// \t}, userCurrencies);\r\n\r\n\t// \tif (currencyFound) {\r\n\t// \t\tlet content = `<p>Picked up:</p>${chatContent}`;\r\n\t// \t\tChatMessage.create({\r\n\t// \t\t\tcontent,\r\n\t// \t\t\tspeaker: {\r\n\t// \t\t\t\talias: controlledToken.actor.name,\r\n\t// \t\t\t\tscene: (game.scenes as any).active.id,\r\n\t// \t\t\t\tactor: controlledToken.actor.id,\r\n\t// \t\t\t\ttoken: controlledToken.id\r\n\t// \t\t\t}\r\n\t// \t\t});\r\n\t// \t\tawait updateActor(controlledToken.actor, { data: { data: { currency: { ...userCurrencies }}}});\r\n\t// \t}\r\n\r\n\t// \tconst itemsToCreate = [];\r\n\r\n\t// \t// if itemData was set through the item selection window, use that as the item data. If not then check if there\r\n\t// \t// are any currencies and if we have currencies then we have no items. If we don't have currencies OR itemData\r\n\t// \t// from the selection window and it's not a container, then use the intiial state\r\n\t// \tconst itemDatas = flags?.itemData?.length\r\n\t// \t\t? flags.itemData\r\n\t// \t\t: (Object.values(flags.currency ?? {}).some(amount => amount > 0)\r\n\t// \t\t\t? []\r\n\t// \t\t\t: (!flags.isContainer\r\n\t// \t\t\t\t? [flags.initialState]\r\n\t// \t\t\t\t: [])\r\n\t// \t\t\t);\r\n\r\n\t// \tfor (let i=0; i < itemDatas.length; i++) {\r\n\t// \t\tconst itemData = itemDatas[i];\r\n\t// \t\tconst datas = [];\r\n\t// \t\tfor (let i = 0; i < itemData.count; i++) {\r\n\t// \t\t\tdatas.push({\r\n\t// \t\t\t\t...itemData.data\r\n\t// \t\t\t});\r\n\t// \t\t}\r\n\r\n\t// \t\titemsToCreate.push(...datas)\r\n\r\n\t// \t\tif (itemData.count > 0) {\r\n\t// \t\t\tChatMessage.create({\r\n\t// \t\t\t\tcontent: `\r\n\t// \t\t\t\t\t<p>Picked up ${itemData.count} ${itemData.data.name}</p>\r\n\t// \t\t\t\t\t<img src=\"${itemData.data.img}\" style=\"width: 40px;\" />\r\n\t// \t\t\t\t`,\r\n\t// \t\t\t\tspeaker: {\r\n\t// \t\t\t\t\talias: controlledToken.actor.name,\r\n\t// \t\t\t\t\tscene: (game.scenes as any).active.id,\r\n\t// \t\t\t\t\tactor: controlledToken.actor.id,\r\n\t// \t\t\t\t\ttoken: controlledToken.id\r\n\t// \t\t\t\t}\r\n\t// \t\t\t});\r\n\t// \t\t}\r\n\t// \t}\r\n\r\n\t// \t// if it's a container, clear out the items as they've been picked up now\r\n\t// \tif (flags.isContainer) {\r\n\t// \t\tlet containerUpdates;\r\n\t// \t\tcontainerUpdates.flags['pick-up-stix']['pick-up-stix'].itemData = [];\r\n\t// \t\tcontainerUpdates.flags['pick-up-stix']['pick-up-stix'].currency = { pp: 0, gp: 0, ep: 0, sp: 0, cp: 0 };\r\n\t// \t}\r\n\r\n\t// \tawait createOwnedEntity(controlledToken.actor, itemsToCreate);\r\n\t// }\r\n\r\n\tthis.mouseInteractionManager?._deactivateDragEvents();\r\n}\r\n\r\nasync function deleteToken(token: Token): Promise<void> {\r\n\tconsole.log(`pick-up-stix | deleteToken with args:`);\r\n\tconsole.log(token);\r\n\r\n\tif (game.user.isGM) {\r\n\t\tawait canvas.scene.deleteEmbeddedEntity('Token', token.id);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst msg: PickUpStixSocketMessage = {\r\n\t\tsender: game.user.id,\r\n\t\ttype: SocketMessageType.deleteToken,\r\n\t\tdata: token.id\r\n\t}\r\n\tsocket.emit('module.pick-up-stix', msg);\r\n}\r\n\r\nexport async function updateToken(token: Token, updates): Promise<void> {\r\n\tconsole.log(`pick-up-stix | updateToken with args:`);\r\n\tconsole.log([token, updates]);\r\n\r\n\tif (game.user.isGM) {\r\n\t\tawait token.update(updates);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst msg: PickUpStixSocketMessage = {\r\n\t\tsender: game.user.id,\r\n\t\ttype: SocketMessageType.updateToken,\r\n\t\tdata: {\r\n\t\t\ttokenId: token.id,\r\n\t\t\tupdates\r\n\t\t}\r\n\t};\r\n\r\n\tsocket.emit('module.pick-up-stix', msg, () => {\r\n\t\tconsole.log(`pick-up-stix | updateToken | socket message handled`);\r\n\t});\r\n}\r\n\r\nasync function updateActor(actor, updates): Promise<void> {\r\n\tif (game.user.isGM) {\r\n\t\tawait actor.update(updates);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst msg: PickUpStixSocketMessage = {\r\n\t\tsender: game.user.id,\r\n\t\ttype: SocketMessageType.updateActor,\r\n\t\tdata: {\r\n\t\t\tactorId: actor.id,\r\n\t\t\tupdates\r\n\t\t}\r\n\t};\r\n\r\n\tsocket.emit('module.pick-up-stix', msg);\r\n}\r\n\r\nexport async function createOwnedEntity(actor: Actor, items: any[]) {\r\n\tif (game.user.isGM) {\r\n\t\tawait actor.createOwnedItem(items);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst msg: PickUpStixSocketMessage = {\r\n\t\tsender: game.user.id,\r\n\t\ttype: SocketMessageType.createOwnedEntity,\r\n\t\tdata: {\r\n\t\t\tactorId: actor.id,\r\n\t\t\titems\r\n\t\t}\r\n\t};\r\n\r\n\tsocket.emit('module.pick-up-stix', msg, () => {\r\n\t\tconsole.log(`pick-up-stix | createOwnedEntity | socket message handled`);\r\n\t});\r\n}\r\n\r\nasync function createItemToken(data: any): Promise<string> {\r\n\tconsole.log(`pick-up-stix | createItemToken | called with args:`);\r\n\tconsole.log(data);\r\n\tif (game.user.isGM) {\r\n\t\tconsole.log(`pick-up-stix | createItemToken | current user is GM, creating token`);\r\n\t\tconst t = await Token.create({\r\n\t\t\t...data\r\n\t\t});\r\n\t\treturn t.id;\r\n\t}\r\n\r\n\tconsole.log(`pick-up-stix | createItemToken | current user is not GM, send socket message`);\r\n\tconst msg: PickUpStixSocketMessage = {\r\n\t\tsender: game.user.id,\r\n\t\ttype: SocketMessageType.createItemToken,\r\n\t\tdata\r\n\t}\r\n\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst timeout = setTimeout(() => {\r\n\t\t\treject('Token never created');\r\n\t\t}, 2000);\r\n\r\n\t\tsocket.emit('module.pick-up-stix', msg, () => {\r\n\t\t\tconsole.log(`pick-up-stix | createItemToken | socket message handled`);\r\n\r\n\t\t\tHooks.once('createToken', (scene, data) => {\r\n\t\t\t\t// TODO: could possibly add a custom custom authentication ID to the data we emit, then we can\r\n\t\t\t\t// check that ID against this created token ID and make sure we are getting the right one. Seems\r\n\t\t\t\t// like it could be rare, but there could be a race condition with other tokens being created\r\n\t\t\t\t// near the same time we are creating this token. Maybe through other modules doing it.\r\n\t\t\t\tconsole.log(`pick-up-stix | createItemToken | createToken hook | Token '${data.id}' created`);\r\n\t\t\t\tclearTimeout(timeout);\r\n\t\t\t\tresolve(data._id);\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport async function drawLockIcon(p: PlaceableObject): Promise<any> {\r\n\tconsole.log(`pick-up-stix | drawLockIcon | called with args:`);\r\n\tconsole.log(p);\r\n\r\n\tconst tex = await loadTexture('icons/svg/padlock.svg');\r\n\tconst icon = p.addChild(new PIXI.Sprite(tex));\r\n\ticon.width = icon.height = 40;\r\n\ticon.alpha = .5;\r\n\ticon.position.set(p.width * .5 - icon.width * .5, p.height * .5 - icon.height * .5);\r\n}\r\n"]}