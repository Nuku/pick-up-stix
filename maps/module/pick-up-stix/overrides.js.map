{"version":3,"sources":["module/pick-up-stix/overrides.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,kBAAe;AAExC;;;;;;GAMG;AACH,MAAM,CAAC,KAAK,UAAU,YAAY,CAAC,KAAK;IACvC,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;IAC/D,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACnB,KAAK,CAAC,cAAc,EAAE,CAAC;IAEvB,0BAA0B;IAC1B,IAAI,IAAI,CAAC;IACT,IAAI;QACH,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;KAC5D;IACD,OAAO,GAAG,EAAE;QACX,OAAO,KAAK,CAAC;KACb;IAED,gEAAgE;IAChE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;IAC9C,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;IACpC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3C,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAE3C,gBAAgB;IAChB,IAAK,IAAI,CAAC,IAAI,KAAK,OAAO;QAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAEzE,wBAAwB;SACnB,IAAK,IAAI,CAAC,IAAI,KAAK,cAAc;QAAG,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAE/E,6BAA6B;SACxB,IAAK,IAAI,CAAC,IAAI,KAAK,OAAO,EAAG;QACjC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KAC7C;IAED,uBAAuB;SAClB,IAAK,IAAI,CAAC,IAAI,KAAK,MAAM,EAAG;QAChC,OAAO,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KACjD;IACD,eAAe;SACV,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;QAC9B,cAAc,CAAC,IAAI,CAAC,CAAC;KACrB;AACF,CAAC","file":"../../../src/module/pick-up-stix/overrides.js","sourcesContent":["import { handleDropItem } from \"./main\";\r\n\r\n/**\r\n * TODO remove once .0.7.x becomes a stable release\r\n * This method overrides the normal DragDrop 'drop' operation for the Canvas object.\r\n *\r\n * @override\r\n * @param event\r\n */\r\nexport async function handleOnDrop(event) {\r\n\tconsole.log(`pick-up-stix | handleOnDrop | called with args:`);\r\n\tconsole.log(event);\r\n\tevent.preventDefault();\r\n\r\n\t// Try to extract the data\r\n\tlet data;\r\n\ttry {\r\n\t\tdata = JSON.parse(event.dataTransfer.getData('text/plain'));\r\n\t}\r\n\tcatch (err) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Acquire the cursor position transformed to Canvas coordinates\r\n\tconst [x, y] = [event.clientX, event.clientY];\r\n\tconst t = this.stage.worldTransform;\r\n\tdata.x = (x - t.tx) / canvas.stage.scale.x;\r\n\tdata.y = (y - t.ty) / canvas.stage.scale.y;\r\n\r\n\t// Dropped Actor\r\n\tif ( data.type === \"Actor\" ) canvas.tokens._onDropActorData(event, data);\r\n\r\n\t// Dropped Journal Entry\r\n\telse if ( data.type === \"JournalEntry\" ) canvas.notes._onDropData(event, data);\r\n\r\n\t// Dropped Macro (clear slot)\r\n\telse if ( data.type === \"Macro\" ) {\r\n\t\tgame.user.assignHotbarMacro(null, data.slot);\r\n\t}\r\n\r\n\t// Dropped Tile artwork\r\n\telse if ( data.type === \"Tile\" ) {\r\n\t\treturn canvas.tiles._onDropTileData(event, data);\r\n\t}\r\n\t// Dropped Item\r\n\telse if (data.type === \"Item\") {\r\n\t\thandleDropItem(data);\r\n\t}\r\n}"]}