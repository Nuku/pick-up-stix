{"version":3,"sources":["module/pick-up-stix/item-sheet-application.ts"],"names":[],"mappings":"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","file":"../../../src/module/pick-up-stix/item-sheet-application.js","sourcesContent":["import { PickUpStixFlags, ItemData, ItemType } from \"./models\";\r\n\r\n/**\r\n * Application class to display to select an item that the token is\r\n * associated with\r\n */\r\nexport default class ItemSheetApplication extends Application {\r\n\tstatic get defaultOptions(): ApplicationOptions {\r\n\t  const options = super.defaultOptions;\r\n    options.id = \"pick-up-stix-selectItem\";\r\n\t  options.template = \"modules/pick-up-stix/module/pick-up-stix/templates/item-sheet.html\";\r\n\t\toptions.width = 500;\r\n\t\toptions.height = 'auto';\r\n\t\toptions.minimizable = false;\r\n\t\toptions.title = \"Select an Item\";\r\n\t\toptions.resizable = true;\r\n    return options;\r\n\t}\r\n\r\n\tprivate _flags: PickUpStixFlags = {\r\n\t\timageContainerClosedPath: null,\r\n\t\timageContainerOpenPath: null,\r\n\t\timageOriginalPath: null,\r\n\t\tinitialState: {data: null, count: 0, id: null},\r\n\t\tisLocked: false,\r\n\t\tisOpen: false,\r\n\t\tcurrency: {\r\n\t\t\tcp: 0,\r\n\t\t\tsp: 0,\r\n\t\t\tep: 0,\r\n\t\t\tgp: 0,\r\n\t\t\tpp: 0\r\n\t\t},\r\n\t\titemData: [],\r\n\t\titemType: ItemType.ITEM,\r\n\t\tcanClose: true\r\n\t};\r\n\r\n\tprivate get itemType(): ItemType {\r\n\t\treturn this._flags.itemType;\r\n\t}\r\n\tprivate set itemType(value: ItemType) {\r\n\t\tthis._flags.itemType = value;\r\n\t}\r\n\r\n\tprivate get imageContainerOpenPath(): string {\r\n\t\treturn this._flags.imageContainerOpenPath;\r\n\t}\r\n\tprivate set imageContainerOpenPath(value: string) {\r\n\t\tthis._flags.imageContainerOpenPath = value;\r\n\t}\r\n\r\n\tprivate get imageContainerClosedPath(): string {\r\n\t\treturn this._flags.imageContainerClosedPath;\r\n\t}\r\n\tprivate set imageContainerClosedPath(value: string) {\r\n\t\tthis._flags.imageContainerClosedPath = value;\r\n\t}\r\n\r\n\tprivate get selectionData(): ItemData[] {\r\n\t\treturn this._flags.itemData;\r\n\t}\r\n\tprivate set selectionData(value: ItemData[]) {\r\n\t\tthis._flags.itemData = [\r\n\t\t\t...value\r\n\t\t];\r\n\t}\r\n\r\n\tprivate get currency(): any {\r\n\t\treturn this._flags.currency;\r\n\t}\r\n\tprivate set currency(value: any) {\r\n\t\tthis._flags.currency = {\r\n\t\t\t...value\r\n\t\t};\r\n\t}\r\n\r\n\tprivate _html: any;\r\n\r\n\tconstructor(private _token: Token) {\r\n\t\tsuper({});\r\n\t\tconsole.log(`pick-up-stix | select item form | constructed with args:`)\r\n\t\tconsole.log(this._token);\r\n\r\n\t\tthis._flags = {\r\n\t\t\t...duplicate(this._token.getFlag('pick-up-stix', 'pick-up-stix') ?? {})\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async setSelectionAmount(id: string, count: number): Promise<ItemData> {\r\n\t\tconsole.log(`pick-up-stix | select item from | setSelectionAmount | called with args`);\r\n\t\tconsole.log([id, count]);\r\n\r\n\t\tlet currItemData = this.selectionData?.find(itemData => itemData.id === id);\r\n\r\n\t\tif (currItemData) {\r\n\t\t\tcurrItemData.count = count;\r\n\t\t\tconsole.log(`Previous value existed, setting ${currItemData.id} to count ${currItemData.count}`);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcurrItemData = {\r\n\t\t\t\tid,\r\n\t\t\t\tcount: 1,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t...this.getData()?.object?.items?.find((i: Item) => i._id === id)\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (this.selectionData) {\r\n\t\t\t\tthis.selectionData?.push(currItemData)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._flags.itemData = [currItemData];\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(`Adding item ${currItemData.id} with count ${currItemData.count}`);\r\n\t\t}\r\n\r\n\t\treturn currItemData;\r\n\t}\r\n\r\n\tactivateListeners(html) {\r\n\t\tconsole.log(`pick-up-stix | SelectItemApplication | activateListeners called with args:`);\r\n\t\tconsole.log(html);\r\n\r\n\t\tsuper.activateListeners(this._html);\r\n\t\tthis._html = html;\r\n\r\n\t\t$(this._html).find(`.currency-wrapper [data-currency-type]`).each((idx, e) => {\r\n\t\t\tconst currencyType = $(e).attr(`data-currency-type`);\r\n\t\t\t$(e).val(this._flags?.currency?.[currencyType]);\r\n\t\t});\r\n\r\n\t\tif (this.itemType) {\r\n\t\t\t$(this._html).find(`#isContainerCheckBox`).prop('checked', true);\r\n\t\t}\r\n\r\n\t\tif (this._flags.canClose) {\r\n\t\t\t$(this._html).find(`#canCloseCheckBox`).prop('checked', true);\r\n\t\t}\r\n\r\n\t\tthis.selectionData?.forEach(itemData => {\r\n\t\t\tconsole.log(`pick-up-stix | selection from setup | setting item ${itemData.data._id} to active and count to ${itemData.count}`);\r\n\t\t\tconst item = $(this._html).find(`[data-item-id=\"${itemData.data._id}\"]`);\r\n\t\t\tif (itemData.count > 0) {\r\n\t\t\t\titem.addClass('active');\r\n\t\t\t}\r\n\t\t\titem.find('.count').val(itemData.count);\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Listen on the file input for when it's clicked. prevent the default dialog from\r\n\t\t * opening and open the Foundry FilePicker\r\n\t\t */\r\n\t\t$(this._html).find('input[type=\"file\"]').click(e => {\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tconst openDialog = $(e.currentTarget).hasClass('open');\r\n\r\n\t\t\tconst fp = new FilePicker({\r\n\t\t\t\ttype: 'image',\r\n\t\t\t\tcallback: path => {\r\n\t\t\t\t\tconsole.log(`pick-up-stix | file picker picked | setting container image ${openDialog ? 'open' : 'closed'} path to ${path}`);\r\n\r\n\t\t\t\t\tif (openDialog) {\r\n\t\t\t\t\t\tthis.imageContainerOpenPath = path;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.imageContainerClosedPath = path;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.render();\r\n\t\t\t\t}\r\n\t\t\t}).browse((openDialog ? this.imageContainerOpenPath : this.imageContainerClosedPath) ?? '');\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Listen for the container checkbox change event\r\n\t\t */\r\n\t\t$(this._html).find('#isContainerCheckBox').change(async (e) => {\r\n\t\t\tconsole.log(`pick-up-stix | select form | file input check box changed`);\r\n\t\t\t//this.itemType = !this.itemType;\r\n\r\n\t\t\tif (!this.imageContainerClosedPath && !this.imageContainerOpenPath) {\r\n\t\t\t\tthis.imageContainerClosedPath = 'modules/pick-up-stix/assets/chest-closed.png';\r\n\t\t\t\tthis.imageContainerOpenPath = 'modules/pick-up-stix/assets/chest-opened.png'\r\n\t\t\t\tthis._flags.canClose = true;\r\n\t\t\t}\r\n\t\t\tthis.render();\r\n\t\t});\r\n\r\n\t\tif (this.itemType) {\r\n\t\t\t/**\r\n\t\t\t * Listen for if the can close checkbox is changed\r\n\t\t\t */\r\n\t\t\t$(this._html).find('#canCloseCheckBox').change(async (e) => {\r\n\t\t\t\tconsole.log(`pick-up-stix | SelectItemApplication | canCloseCheckBox changed`);\r\n\t\t\t\tthis._flags.canClose = !this._flags.canClose;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Listen for the change event on the count input\r\n\t\t */\r\n\t\t$(this._html).find('.item .count').change(async (e) => {\r\n\t\t\tconst count = +$(e.currentTarget).val();\r\n\t\t\tconst id = $(e.currentTarget).parent().attr('data-item-id');\r\n\t\t\tconsole.log(`pick-up-stix | selection from count input changed | Setting item ${id} to count ${count}`);\r\n\t\t\tif (count === 0) {\r\n\t\t\t\t$(this._html).find(`[data-item-id=\"${id}\"]`).removeClass('active');\r\n\t\t\t}\r\n\t\t\telse if(count > 0) {\r\n\t\t\t\t$(this._html).find(`[data-item-id=\"${id}\"]`).addClass('active');\r\n\t\t\t}\r\n\t\t\tawait this.setSelectionAmount(id, count);\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * listen for currency input changes\r\n\t\t */\r\n\t\t$(this._html).find('.currency-wrapper .currency-input').change(e => {\r\n\t\t\tconsole.log(`pick-up-stix | select item form | currency input changed with args:`)\r\n\t\t\tconsole.log(e);\r\n\t\t\tconst currencyType = $(e.currentTarget).attr('data-currency-type');\r\n\t\t\tconst amount = $(e.currentTarget).val();\r\n\t\t\tsetProperty(this._flags, `currency.${currencyType}`, amount);\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Listen for clicks on each item's image and increment the item's count by one\r\n\t\t */\r\n\t\t$(this._html).find('.item img').click(async (e) => {\r\n\t\t\tconst item = $(e.currentTarget).parent();\r\n\t\t\tconst itemId = item.attr('data-item-id');\r\n\r\n\t\t\tlet currItemData = this.selectionData.find(itemData => itemData.id === itemId);\r\n\t\t\tcurrItemData = await this.setSelectionAmount(itemId, currItemData ? currItemData.count + 1 : 1);\r\n\t\t\titem.find('.count').val(currItemData[1]);\r\n\t\t\tconsole.log(`pick-up-stix | selection form image clicked | setting item ${itemId} to count ${currItemData.count}`);\r\n\t\t\titem.addClass('active');\r\n\t\t\tthis.render();\r\n\t\t});\r\n\t}\r\n\r\n\tgetData(): {options: any, object: { items: any[], itemType: ItemType, imageContainerOpenPath: string, imageContainerClosedPath: string, actor: Actor } } {\r\n\t\treturn {\r\n\t\t\toptions: this.options,\r\n\t\t\tobject: {\r\n\t\t\t\tactor: this._token.actor,\r\n\t\t\t\titems: duplicate(game.items.entities.filter(i => !['class', 'spell', 'feat'].includes(i.type))),\r\n\t\t\t\titemType: this.itemType,\r\n\t\t\t\timageContainerOpenPath: this.imageContainerOpenPath,\r\n\t\t\t\timageContainerClosedPath: this.imageContainerClosedPath\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync close() {\r\n\t\tconst update = {\r\n\t\t\timg: this._flags.isOpen ? this._flags.imageContainerOpenPath : this._flags.imageContainerClosedPath,\r\n\t\t\tflags: {\r\n\t\t\t\t'pick-up-stix': {\r\n\t\t\t\t\t'pick-up-stix': {\r\n\t\t\t\t\t\t...this._flags\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tawait this._token.update(update);\r\n\t\tsuper.close();\r\n\t}\r\n}"]}