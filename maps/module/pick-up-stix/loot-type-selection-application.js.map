{"version":3,"sources":["module/pick-up-stix/loot-type-selection-application.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,oBAAiB;AAEpC,MAAM,CAAC,OAAO,OAAO,4BAA6B,SAAQ,eAAe;IACvE,MAAM,KAAK,cAAc;QACvB,OAAO,WAAW,CAAC,KAAK,CAAC,cAAc,EAAE;YACvC,aAAa,EAAE,IAAI;YACnB,MAAM,EAAE,MAAM;YACd,EAAE,EAAE,0BAA0B;YAC9B,WAAW,EAAE,KAAK;YAClB,SAAS,EAAE,KAAK;YAChB,QAAQ,EAAE,6EAA6E;YACvF,KAAK,EAAE,kBAAkB;SAC1B,CAAC,CAAC;IACL,CAAC;IAED,YAAY,MAAM,EAAE,OAAO,GAAG,EAAE;QAC9B,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,sEAAsE,CAAC,CAAC;QACpF,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;IACjC,CAAC;IAED,OAAO;QACL,MAAM,IAAI,GAAG;YACX,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;SACnC,CAAA;QACD,OAAO,CAAC,GAAG,CAAC,wDAAwD,CAAC,CAAC;QACtE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,QAAQ;QACjC,OAAO,CAAC,GAAG,CAAC,+EAA+E,CAAC,CAAC;QAC7F,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;QAC/B,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QAC/B,WAAW,CAAC,QAAQ,EAAE,0CAA0C,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAA;QACpF,WAAW,CAAC,QAAQ,EAAE,0CAA0C,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACrF,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;CACF","file":"../../../src/module/pick-up-stix/loot-type-selection-application.js","sourcesContent":["import { ItemType } from \"./models\";\r\n\r\nexport default class ItemTypeSelectionApplication extends FormApplication {\r\n  static get defaultOptions(): FormApplicationOptions {\r\n    return mergeObject(super.defaultOptions, {\r\n      submitOnClose: true,\r\n      height: 'auto',\r\n      id: 'loot-type-selection-form',\r\n      minimizable: false,\r\n      resizable: false,\r\n      template: 'modules/pick-up-stix/module/pick-up-stix/templates/item-type-selection.html',\r\n      title: 'Select Loot Type'\r\n    });\r\n  }\r\n\r\n  constructor(object, options = {}) {\r\n    super(object, options);\r\n    console.log(`pick-up-stix | LootTypeSelectionApplication | constructed with args:`);\r\n    console.log([object, options]);\r\n  }\r\n\r\n  getData() {\r\n    const data = {\r\n      lootTypes: Object.values(ItemType)\r\n    }\r\n    console.log(`pick-up-stix | LootTypeSelectionApplication | getData:`);\r\n    console.log(data);\r\n    return data;\r\n  }\r\n\r\n  async _updateObject(event, formData): Promise<Entity> {\r\n    console.log(`pick-up-stix | LootTypeSelectionApplication | _updateObject called with args:`);\r\n    console.log([event, formData]);\r\n    formData._id = this.object._id;\r\n    setProperty(formData, 'flags.pick-up-stix.pick-up-stix.itemType', formData.itemType)\r\n    setProperty(formData, 'flags.pick-up-stix.pick-up-stix.isLocked', formData.isLocked);\r\n    return this.object.update(formData);\r\n  }\r\n}\r\n"]}